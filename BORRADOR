/* Operaciones
añadir un cliente
atender a un cliente
mostrar el estado de las colas
Escribir también un programa de prueba
*/
Clase Urgencia (Enumerada)

[java]

/**

* Clase enumerada que representa la

* urgencia de un cliente

*/

public enum Urgencia

{

baja, media, alta

}

[/java]

Clase ColaEsperaConUrgencia

[java]
import java.util.*;

public class ColaEsperaConUrgencia

{

/**

* Clase interna para almacenar los datos

* de un cliente con urgencia

*/

private static class DatosCliente implements Comparable <DatosCliente>

{

Cliente c;

Urgencia urg;

/**

* Constructor de DatosCliente

*/

DatosCliente (Cliente c, Urgencia urg) {

this.c=c;

this.urg=urg;

}

/**

* Comparación de clientes por su urgencia

*/
public int compareTo(DatosCliente otro) {

return this.urg.compareTo(otro.urg);

}

}
// final de la clase DatosCliente
// cola del servicio

private Queue<DatosCliente> colaEspera;

/**

* Constructor de ColaEspera

*/

public ColaEsperaConUrgencia()

{

colaEspera=new

PriorityQueue<DatosCliente>();

}

/**

* Nuevo cliente; se mete en la cola de espera

*/

public void nuevoCliente

(Cliente c, Urgencia urg)

{

DatosCliente datos=new DatosCliente(c,urg);

colaEspera.add(datos);

}

/**

* Atender cliente: se saca de la cola de

* espera; retorna el cliente atendido

*/

public Cliente atenderCliente()

throws NoSuchElementException
{

DatosCliente datos=colaEspera.remove();

return datos.c;

}

/**

* Mostrar el estado de la cola de espera

*/

public void muestraEstado() {

System.out.println();

System.out.println("–Estado de la cola–");

System.out.println("No atendidos "+
colaEspera.size());

for (DatosCliente datos:colaEspera) {
System.out.println(datos.c+" urgencia:
"+datos.urg);
}
}
/**
* Num clientes en espera
*/
public int numClientesEnEspera() {
return colaEspera.size();
}
}
[/java]
